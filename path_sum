var hasPathSum = function(root, targetSum) {
    if (root==null) return false;
    if (root.val==targetSum &&(root.left==null&& root.right===null))return true;
    return hasPathSum (root.left,targetSum-root.val)|| hasPathSum (root.right,targetSum-root.val);
    
};

// Approach
// is there a route that will equal target?
// would check if root is empty
//use recursive for left and right subtree
// go down each left node 
// if left nodes do not equal target back track one step and go right
